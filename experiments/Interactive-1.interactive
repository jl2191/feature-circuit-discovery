{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "644ae01d-f92b-4ad3-8bdc-8dd0e2c4e30f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/root/feature-circuit-discovery/.venv/lib/python3.10/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n",
      "  from .autonotebook import tqdm as notebook_tqdm\n"
     ]
    }
   ],
   "source": [
    "import json\n",
    "\n",
    "from tqdm import tqdm\n",
    "from transformers import AutoModelForCausalLM, AutoTokenizer\n",
    "\n",
    "from feature_circuit_discovery.sae_funcs import (\n",
    "    compute_gradient_matrix,\n",
    "    get_active_features,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "beb3900a-2fbc-4546-85df-ad55aa8386be",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.06it/s]\n"
     ]
    }
   ],
   "source": [
    "model = AutoModelForCausalLM.from_pretrained(\n",
    "    \"google/gemma-2-2b\",\n",
    "    device_map=\"auto\",\n",
    ")\n",
    "\n",
    "device = model.device\n",
    "\n",
    "\n",
    "tokenizer = AutoTokenizer.from_pretrained(\"google/gemma-2-2b\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8f3065ec-3060-4bd3-b163-3106c01e6c1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "prompt_data = [\n",
    "    \"what's your favourite color?\",\n",
    "    \"who should be president?\",\n",
    "    \"why don't you like me?\",\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a9c1918c-5035-4d99-af83-d9b160e7b06e",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(\n",
    "    \"/root/feature-circuit-discovery/datasets/ioi/ioi_test_100.json\", \"rb\"\n",
    ") as file:\n",
    "    prompt_data = json.load(file)\n",
    "\n",
    "prompt_data[\"prompts\"] = [\n",
    "    \" \".join(sentence.split()[:-1]) for sentence in prompt_data[\"sentences\"]\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "51c72401-2960-47b4-9e1a-ed51188128ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(\n",
    "    \"/root/feature-circuit-discovery/datasets/ioi/ioi_test_100_2.json\", \"w\"\n",
    ") as file:\n",
    "    json.dump(prompt_data, file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6eaa826d-a44e-4574-86b6-3651dbe6a6a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  0%|          | 0/26 [00:00<?, ?it/s]Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)\n",
      "100%|██████████| 26/26 [00:26<00:00,  1.00s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "torch.Size([15, 16384])\n",
      "\n",
      "tensor([4624, 5542], device='cuda:0')\n",
      "length: 2\n",
      "\n",
      "tensor([ 1032,  4624,  6451,  6483,  7183,  9239, 12054, 13412, 14659, 14984,\n",
      "        15066, 15664], device='cuda:0')\n",
      "length: 12\n",
      "\n",
      "tensor([   91,   179,   964,  1594,  3712,  5211,  5542,  8172,  8407,  8650,\n",
      "        12565, 13092], device='cuda:0')\n",
      "length: 12\n",
      "\n",
      "tensor([  410,   768,   964,  5208,  5264,  6486,  7145, 10608, 10898, 11028,\n",
      "        13535, 13764], device='cuda:0')\n",
      "length: 12\n",
      "\n",
      "tensor([  255,   480,  1156,  1473,  1588,  2610,  2616,  4275,  5216,  5301,\n",
      "         5761,  6326,  6680,  7211, 10004, 10714, 10844, 11995, 12690, 13003,\n",
      "        14148, 14241, 15633], device='cuda:0')\n",
      "length: 23\n",
      "\n",
      "tensor([  697,  2037,  4304,  6485,  7350,  7494,  7936,  8680,  8799, 12403,\n",
      "        13110, 15254, 15347, 16368], device='cuda:0')\n",
      "length: 14\n",
      "\n",
      "tensor([ 1485,  1670,  9666,  9687,  9743, 10711, 12106, 13460, 13853, 14238,\n",
      "        14412, 15115], device='cuda:0')\n",
      "length: 12\n",
      "\n",
      "tensor([ 1633,  3148,  3704,  4435,  5449,  7099,  9395, 10376, 10958, 11611,\n",
      "        11961, 12287, 12772, 15465, 15823, 15835], device='cuda:0')\n",
      "length: 16\n",
      "\n",
      "tensor([  698,   815,   883,  1172,  1854,  2024,  5594,  7035,  8099,  9213,\n",
      "        10238, 10971, 12026, 12244, 12267, 13230, 13540], device='cuda:0')\n",
      "length: 17\n",
      "\n",
      "tensor([   54,   550,  1540,  3256,  4155,  4494,  4498,  4752,  5594,  8911,\n",
      "         9870, 10300, 12102, 14001, 14471, 14873, 15415], device='cuda:0')\n",
      "length: 17\n",
      "\n",
      "tensor([   60,    65,  1503,  1740,  1908,  2316,  3582,  3910,  3986,  4392,\n",
      "         4966,  9312,  9329,  9785, 10610, 10680, 12161, 12317, 13861, 14349],\n",
      "       device='cuda:0')\n",
      "length: 20\n",
      "\n",
      "tensor([ 3151,  3250,  3482,  4841,  5091,  5732,  5834,  6830,  6934,  7001,\n",
      "         7374,  8029,  9651, 12258, 12945, 13515, 14117, 15076],\n",
      "       device='cuda:0')\n",
      "length: 18\n",
      "\n",
      "tensor([ 1041,  2620,  5067,  7441,  7541,  8929,  9265,  9525, 10076, 10617,\n",
      "        11209, 13580, 13962, 15408, 15587], device='cuda:0')\n",
      "length: 15\n",
      "\n",
      "tensor([ 1808,  2459,  2778,  2934,  4042,  6303,  6810,  7322,  7376,  7427,\n",
      "         7655, 11248, 11256, 11277, 13929, 15175, 15177, 15275, 15400],\n",
      "       device='cuda:0')\n",
      "length: 19\n",
      "\n",
      "tensor([  875,  1677,  1850,  2360,  3035,  5191,  5835,  8436,  8515,  8937,\n",
      "         9401, 10220, 10687, 11889, 12319, 14843, 15567], device='cuda:0')\n",
      "length: 17\n",
      "\n",
      "tensor([  381,   434,   801,  1695,  1776,  1784,  3713,  3823,  6154,  6191,\n",
      "         6667,  6722,  6740,  7327,  9643,  9764, 10716, 11764, 12644, 13308,\n",
      "        14558, 14802], device='cuda:0')\n",
      "length: 22\n",
      "\n",
      "tensor([ 1770,  2833,  2889,  3847,  4505,  4863,  7178,  8133,  9204,  9337,\n",
      "         9757, 10302, 12536, 13536, 14182, 14382, 15968, 16028, 16126],\n",
      "       device='cuda:0')\n",
      "length: 19\n",
      "\n",
      "tensor([ 1423,  2027,  2618,  2904,  5027,  7127,  7654,  8735, 10042, 10620,\n",
      "        12006, 13012, 15379, 15620], device='cuda:0')\n",
      "length: 14\n",
      "\n",
      "tensor([   61,   562,  1645,  3851,  4055,  4234,  6584,  7768,  9392, 10415,\n",
      "        12966, 13034, 14445], device='cuda:0')\n",
      "length: 13\n",
      "\n",
      "tensor([ 3019,  6277,  6824,  7401,  9595, 10678, 12025, 13226, 13542, 15125],\n",
      "       device='cuda:0')\n",
      "length: 10\n",
      "\n",
      "tensor([  645,  2430,  2861,  3586,  6029,  6043,  6631,  9768, 11033, 11045,\n",
      "        12261, 12545, 14113], device='cuda:0')\n",
      "length: 13\n",
      "\n",
      "tensor([  154,   959,  1054,  4138,  4235,  4430,  7229,  7268,  8176,  8343,\n",
      "        11568, 11900, 12441, 12482, 13174], device='cuda:0')\n",
      "length: 15\n",
      "\n",
      "tensor([  154,   401,  1269,  1722,  3497,  5286, 10043, 10191, 14101, 14314,\n",
      "        15056, 15916], device='cuda:0')\n",
      "length: 12\n",
      "\n",
      "tensor([  154,   296,  5205,  5286,  6961,  7073,  7217,  8960,  9732, 10788,\n",
      "        11796, 12119], device='cuda:0')\n",
      "length: 12\n",
      "\n",
      "tensor([  261,  3848,  5328,  9589, 13038, 13404, 13886, 14037, 14870, 14949,\n",
      "        15034], device='cuda:0')\n",
      "length: 11\n",
      "\n",
      "tensor([   62,   565,  3017,  5246,  5755,  8083,  8456, 10379, 12182, 12908,\n",
      "        15013, 16361, 16369], device='cuda:0')\n",
      "length: 13\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "tokenized_prompts = (\n",
    "    tokenizer(\n",
    "        prompt_data[\"prompts\"][:15],\n",
    "        return_tensors=\"pt\",\n",
    "        add_special_tokens=True,\n",
    "        padding=True,\n",
    "    )\n",
    "    .data[\"input_ids\"]\n",
    "    .to(device)\n",
    ")\n",
    "\n",
    "matrices = []\n",
    "\n",
    "activated_features = get_active_features(tokenized_prompts, model, device, threshold=0.9)\n",
    "\n",
    "for i in range(len(activated_features)):\n",
    "    print()\n",
    "    print(activated_features[i])\n",
    "    print(\"length:\",len(activated_features[i]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "10baae49-259b-4ccb-aa32-770d5349dbd0",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "incomplete input (<ipython-input-8-2f014994689b>, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[8], line 2\u001b[0;36m\u001b[0m\n\u001b[0;31m    \"\"\"\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m incomplete input\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "for layer in tqdm(range(len(activated_features) - 2)):\n",
    "    grad_matrix = compute_gradient_matrix(\n",
    "        tokenized_prompts,\n",
    "        layer,\n",
    "        layer + 1,\n",
    "        activated_features[layer],\n",
    "        activated_features[layer + 2],\n",
    "        model,\n",
    "        verbose=True,\n",
    "    )\n",
    "    matrices.append(grad_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e50f6b06-1deb-42fe-9f36-0a176358359d",
   "metadata": {},
   "outputs": [
    {
     "ename": "",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31mCell was canceled due to an error in a previous cell."
     ]
    }
   ],
   "source": [
    "from feature_circuit_discovery.graphs import draw_bipartite_graph\n",
    "\n",
    "for i in matrices:\n",
    "    draw_bipartite_graph(i, threshold=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d340d48f-53e4-4aa5-b42c-c2c10ca17c90",
   "metadata": {},
   "outputs": [
    {
     "ename": "",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31mCell was canceled due to an error in a previous cell."
     ]
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "for i in matrices:\n",
    "    plt.imshow(i.cpu())\n",
    "    plt.colorbar()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6341e452-ccad-48a8-bd0e-431e4bf64cbf",
   "metadata": {},
   "outputs": [
    {
     "ename": "",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31mCell was canceled due to an error in a previous cell."
     ]
    }
   ],
   "source": [
    "for i in matrices:\n",
    "    print(i)\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e62fc5a4-19f6-4285-afb7-392a052651d7",
   "metadata": {},
   "outputs": [
    {
     "ename": "",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31mCell was canceled due to an error in a previous cell."
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "def plot_layered_network(connections):\n",
    "    layers = sorted(set([i for i, _ in connections.keys()] + [j for _, j in connections.keys()]))\n",
    "    num_layers = len(layers)\n",
    "    \n",
    "    # Create a mapping of layer index to x-coordinates for plotting\n",
    "    layer_x_positions = {layer: index for index, layer in enumerate(layers)}\n",
    "\n",
    "    # Initialize plot\n",
    "    fig, ax = plt.subplots(figsize=(12, 8))\n",
    "    \n",
    "    # Store the node positions in each layer\n",
    "    node_positions = {}\n",
    "    max_nodes_per_layer = 0\n",
    "\n",
    "    # Calculate number of nodes per layer and their y-positions\n",
    "    for layer in layers:\n",
    "        # Determine the number of nodes in each layer\n",
    "        num_nodes = 0\n",
    "        for (i, j), matrix in connections.items():\n",
    "            if i == layer:\n",
    "                num_nodes = max(num_nodes, matrix.shape[0])\n",
    "            if j == layer:\n",
    "                num_nodes = max(num_nodes, matrix.shape[1])\n",
    "        \n",
    "        # Store the y-positions of nodes for this layer\n",
    "        node_y_positions = np.linspace(0, 1, num_nodes)\n",
    "        node_positions[layer] = node_y_positions\n",
    "        max_nodes_per_layer = max(max_nodes_per_layer, num_nodes)\n",
    "    \n",
    "    # Plot nodes and connections\n",
    "    for (i, j), matrix in connections.items():\n",
    "        i_x, j_x = layer_x_positions[i], layer_x_positions[j]\n",
    "        \n",
    "        # Iterate over each node in the i-th layer\n",
    "        for i_node in range(matrix.shape[0]):\n",
    "            i_y = node_positions[i][i_node]\n",
    "            \n",
    "            # Iterate over each node in the j-th layer\n",
    "            for j_node in range(matrix.shape[1]):\n",
    "                j_y = node_positions[j][j_node]\n",
    "                \n",
    "                # Check if there is a non-zero connection\n",
    "                connection_strength = matrix[i_node, j_node]\n",
    "                if connection_strength != 0:  # Only plot non-zero connections\n",
    "                    ax.plot([i_x, j_x], [i_y, j_y], color='black', alpha=abs(connection_strength), linewidth=1.5)\n",
    "    \n",
    "    # Plot the nodes in each layer\n",
    "    for layer, y_positions in node_positions.items():\n",
    "        x = layer_x_positions[layer]\n",
    "        for y in y_positions:\n",
    "            ax.scatter(x, y, color='red', s=50, zorder=3)\n",
    "\n",
    "    # Adjust plot aesthetics\n",
    "    ax.set_xticks(range(num_layers))\n",
    "    ax.set_xticklabels([f'Layer {layer}' for layer in layers])\n",
    "    ax.set_yticks([])\n",
    "    ax.set_xlim(-0.5, num_layers - 0.5)\n",
    "    ax.set_ylim(-0.1, 1.1)\n",
    "    ax.set_title('Layered Network Visualization (Non-Zero Connections)', fontsize=16)\n",
    "\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "efee17f8-7a41-417a-8a25-5447d745027a",
   "metadata": {},
   "outputs": [
    {
     "ename": "",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31mCell was canceled due to an error in a previous cell."
     ]
    }
   ],
   "source": [
    "connections = {}\n",
    "num_layers = len(activated_features)\n",
    "\n",
    "for i in range(num_layers):\n",
    "    for j in range(i + 1, num_layers):\n",
    "        # Compute the gradient matrix between layer i and layer j\n",
    "        grad_matrix = compute_gradient_matrix(\n",
    "            tokenized_prompts,\n",
    "            i,\n",
    "            j,\n",
    "            activated_features[i],\n",
    "            activated_features[j],\n",
    "            model,\n",
    "            verbose=True,\n",
    "        )\n",
    "        # Store the computed matrix in the dictionary\n",
    "        connections[(i, j)] = grad_matrix\n",
    "\n",
    "plot_layered_network(connections)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "11f4cfce-0686-48af-9a3f-a9b82973cc24",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def plot_layered_network(connections):\n",
    "    layers = sorted(set([i for i, _ in connections.keys()] + [j for _, j in connections.keys()]))\n",
    "    num_layers = len(layers)\n",
    "    \n",
    "    # Create a mapping of layer index to x-coordinates for plotting\n",
    "    layer_x_positions = {layer: index for index, layer in enumerate(layers)}\n",
    "\n",
    "    # Initialize plot\n",
    "    fig, ax = plt.subplots(figsize=(12, 8))\n",
    "    \n",
    "    # Store the node positions in each layer\n",
    "    node_positions = {}\n",
    "    max_nodes_per_layer = 0\n",
    "\n",
    "    # Calculate number of nodes per layer and their y-positions\n",
    "    for layer in layers:\n",
    "        # Determine the number of nodes in each layer\n",
    "        num_nodes = 0\n",
    "        for (i, j), matrix in connections.items():\n",
    "            if i == layer:\n",
    "                num_nodes = max(num_nodes, matrix.shape[0])\n",
    "            if j == layer:\n",
    "                num_nodes = max(num_nodes, matrix.shape[1])\n",
    "        \n",
    "        # Store the y-positions of nodes for this layer\n",
    "        node_y_positions = np.linspace(0, 1, num_nodes)\n",
    "        node_positions[layer] = node_y_positions\n",
    "        max_nodes_per_layer = max(max_nodes_per_layer, num_nodes)\n",
    "    \n",
    "    # Plot nodes and connections\n",
    "    for (i, j), matrix in connections.items():\n",
    "        i_x, j_x = layer_x_positions[i], layer_x_positions[j]\n",
    "        \n",
    "        # Iterate over each node in the i-th layer\n",
    "        for i_node in range(matrix.shape[0]):\n",
    "            i_y = node_positions[i][i_node]\n",
    "            \n",
    "            # Iterate over each node in the j-th layer\n",
    "            for j_node in range(matrix.shape[1]):\n",
    "                j_y = node_positions[j][j_node]\n",
    "                \n",
    "                # Check if there is a non-zero connection\n",
    "                connection_strength = matrix[i_node, j_node]\n",
    "                if connection_strength != 0:  # Only plot non-zero connections\n",
    "                    ax.plot([i_x, j_x], [i_y, j_y], color='black', alpha=abs(connection_strength), linewidth=1.5)\n",
    "    \n",
    "    # Plot the nodes in each layer\n",
    "    for layer, y_positions in node_positions.items():\n",
    "        x = layer_x_positions[layer]\n",
    "        for y in y_positions:\n",
    "            ax.scatter(x, y, color='red', s=50, zorder=3)\n",
    "\n",
    "    # Adjust plot aesthetics\n",
    "    ax.set_xticks(range(num_layers))\n",
    "    ax.set_xticklabels([f'Layer {layer}' for layer in layers])\n",
    "    ax.set_yticks([])\n",
    "    ax.set_xlim(-0.5, num_layers - 0.5)\n",
    "    ax.set_ylim(-0.1, 1.1)\n",
    "    ax.set_title('Layered Network Visualization (Non-Zero Connections)', fontsize=16)\n",
    "\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b9008b8-6efd-43b7-9d0b-06bf3e4a5e50",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def plot_layered_network(connections):\n",
    "    layers = sorted(set([i for i, _ in connections.keys()] + [j for _, j in connections.keys()]))\n",
    "    num_layers = len(layers)\n",
    "    \n",
    "    # Create a mapping of layer index to x-coordinates for plotting\n",
    "    layer_x_positions = {layer: index for index, layer in enumerate(layers)}\n",
    "\n",
    "    # Initialize plot\n",
    "    fig, ax = plt.subplots(figsize=(12, 8))\n",
    "    \n",
    "    # Store the node positions in each layer\n",
    "    node_positions = {}\n",
    "    max_nodes_per_layer = 0\n",
    "\n",
    "    # Calculate number of nodes per layer and their y-positions\n",
    "    for layer in layers:\n",
    "        # Determine the number of nodes in each layer\n",
    "        num_nodes = 0\n",
    "        for (i, j), matrix in connections.items():\n",
    "            if i == layer:\n",
    "                num_nodes = max(num_nodes, matrix.shape[0])\n",
    "            if j == layer:\n",
    "                num_nodes = max(num_nodes, matrix.shape[1])\n",
    "        \n",
    "        # Store the y-positions of nodes for this layer\n",
    "        node_y_positions = np.linspace(0, 1, num_nodes)\n",
    "        node_positions[layer] = node_y_positions\n",
    "        max_nodes_per_layer = max(max_nodes_per_layer, num_nodes)\n",
    "    \n",
    "    # Plot nodes and connections\n",
    "    for (i, j), matrix in connections.items():\n",
    "        i_x, j_x = layer_x_positions[i], layer_x_positions[j]\n",
    "        \n",
    "        # Iterate over each node in the i-th layer\n",
    "        for i_node in range(matrix.shape[0]):\n",
    "            i_y = node_positions[i][i_node]\n",
    "            \n",
    "            # Iterate over each node in the j-th layer\n",
    "            for j_node in range(matrix.shape[1]):\n",
    "                j_y = node_positions[j][j_node]\n",
    "                \n",
    "                # Check if there is a non-zero connection\n",
    "                connection_strength = matrix[i_node, j_node]\n",
    "                if connection_strength != 0:  # Only plot non-zero connections\n",
    "                    ax.plot([i_x, j_x], [i_y, j_y], color='black', alpha=abs(connection_strength), linewidth=1.5)\n",
    "    \n",
    "    # Plot the nodes in each layer\n",
    "    for layer, y_positions in node_positions.items():\n",
    "        x = layer_x_positions[layer]\n",
    "        for y in y_positions:\n",
    "            ax.scatter(x, y, color='red', s=50, zorder=3)\n",
    "\n",
    "    # Adjust plot aesthetics\n",
    "    ax.set_xticks(range(num_layers))\n",
    "    ax.set_xticklabels([f'Layer {layer}' for layer in layers])\n",
    "    ax.set_yticks([])\n",
    "    ax.set_xlim(-0.5, num_layers - 0.5)\n",
    "    ax.set_ylim(-0.1, 1.1)\n",
    "    ax.set_title('Layered Network Visualization (Non-Zero Connections)', fontsize=16)\n",
    "\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "08e2015c-4ac0-44b5-b5dd-a5c650ebb831",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 1)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 52.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 2)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 38.03it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 3)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 29.42it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 4)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 23/23 [00:00<00:00, 23.30it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 20.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 18.28it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 15.78it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 14.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 13.07it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 11.97it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 11.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00, 10.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:01<00:00,  9.64it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00,  9.08it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  8.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.08it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.66it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  7.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  7.02it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.67it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  6.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:01<00:00,  6.12it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:01<00:00,  5.66it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.43it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 2)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 29.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 3)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 23.54it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 4)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 23/23 [00:01<00:00, 19.47it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 17.62it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 15.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 10.13it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 3)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 23.02it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 4)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 23/23 [00:01<00:00, 19.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 17.40it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 15.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.75it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.58it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 10.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.81it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.86it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.44it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.79it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.20it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 4)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 23/23 [00:01<00:00, 19.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 17.51it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 15.43it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.84it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.65it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 10.08it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.43it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.81it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.89it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.16it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.56it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.97it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.75it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.13it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 14.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 13.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 12.21it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 10.47it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:02<00:00,  9.74it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  8.63it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  7.71it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:03<00:00,  7.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  6.97it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.68it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.64it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.28it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 15.05it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.48it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.62it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.41it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.18it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.71it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.27it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.75it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.78it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 10.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.81it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.84it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.78it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.22it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.96it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.12it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.66it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.09it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.54it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.08it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.64it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.94it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.63it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.63it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.43it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.05it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.23it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.22it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.03it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.03it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.03it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.23it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.44it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.03it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  8.84it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  7.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.79it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.54it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.56it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.18it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  7.98it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.19it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.89it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.58it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.80it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.20it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.67it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.44it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.87it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.65it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.44it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.07it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  7.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.02it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.56it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.18it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.23it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.09it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.63it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.95it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.70it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.94it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.87it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.79it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.18it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.17it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 18)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 18)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 18)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.95it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 18)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.74it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 18)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 18)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 18)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.12it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 19)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 19)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  6.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 19)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 19)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 19)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.41it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 19)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.19it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 20)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.96it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 20)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.74it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 20)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 20)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 20)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 21)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.67it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 21)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 21)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 21)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 22)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 22)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 22)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.13it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 23)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 23)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 24)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "alpha must be numeric or None, not <class 'torch.Tensor'>",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[11], line 20\u001b[0m\n\u001b[1;32m     17\u001b[0m         \u001b[39m# Store the computed matrix in the dictionary\u001b[39;00m\n\u001b[1;32m     18\u001b[0m         connections[(i, j)] \u001b[39m=\u001b[39m grad_matrix\n\u001b[0;32m---> 20\u001b[0m plot_layered_network(connections)\n",
      "File \u001b[1;32m/root/feature-circuit-discovery/experiments/feature_grad_exp.py:49\u001b[0m\n\u001b[1;32m     47\u001b[0m             connection_strength \u001b[39m=\u001b[39m matrix[i_node, j_node]\n\u001b[1;32m     48\u001b[0m             \u001b[39mif\u001b[39;00m connection_strength \u001b[39m!=\u001b[39m \u001b[39m0\u001b[39m:  \u001b[39m# Only plot non-zero connections\u001b[39;00m\n\u001b[0;32m---> 49\u001b[0m                 ax\u001b[39m.\u001b[39;49mplot([i_x, j_x], [i_y, j_y], color\u001b[39m=\u001b[39;49m\u001b[39m'\u001b[39;49m\u001b[39mblack\u001b[39;49m\u001b[39m'\u001b[39;49m, alpha\u001b[39m=\u001b[39;49m\u001b[39mabs\u001b[39;49m(connection_strength), linewidth\u001b[39m=\u001b[39;49m\u001b[39m1.5\u001b[39;49m)\n\u001b[1;32m     51\u001b[0m \u001b[39m# Plot the nodes in each layer\u001b[39;00m\n\u001b[1;32m     52\u001b[0m \u001b[39mfor\u001b[39;00m layer, y_positions \u001b[39min\u001b[39;00m node_positions\u001b[39m.\u001b[39mitems():\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/axes/_axes.py:1779\u001b[0m, in \u001b[0;36mAxes.plot\u001b[0;34m(self, scalex, scaley, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1536\u001b[0m \u001b[39m\u001b[39m\u001b[39m\"\"\"\u001b[39;00m\n\u001b[1;32m   1537\u001b[0m \u001b[39mPlot y versus x as lines and/or markers.\u001b[39;00m\n\u001b[1;32m   1538\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1776\u001b[0m \u001b[39m(``'green'``) or hex strings (``'#008000'``).\u001b[39;00m\n\u001b[1;32m   1777\u001b[0m \u001b[39m\"\"\"\u001b[39;00m\n\u001b[1;32m   1778\u001b[0m kwargs \u001b[39m=\u001b[39m cbook\u001b[39m.\u001b[39mnormalize_kwargs(kwargs, mlines\u001b[39m.\u001b[39mLine2D)\n\u001b[0;32m-> 1779\u001b[0m lines \u001b[39m=\u001b[39m [\u001b[39m*\u001b[39m\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_get_lines(\u001b[39mself\u001b[39m, \u001b[39m*\u001b[39margs, data\u001b[39m=\u001b[39mdata, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)]\n\u001b[1;32m   1780\u001b[0m \u001b[39mfor\u001b[39;00m line \u001b[39min\u001b[39;00m lines:\n\u001b[1;32m   1781\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39madd_line(line)\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/axes/_base.py:296\u001b[0m, in \u001b[0;36m_process_plot_var_args.__call__\u001b[0;34m(self, axes, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m    294\u001b[0m     this \u001b[39m+\u001b[39m\u001b[39m=\u001b[39m args[\u001b[39m0\u001b[39m],\n\u001b[1;32m    295\u001b[0m     args \u001b[39m=\u001b[39m args[\u001b[39m1\u001b[39m:]\n\u001b[0;32m--> 296\u001b[0m \u001b[39myield from\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_plot_args(\n\u001b[1;32m    297\u001b[0m     axes, this, kwargs, ambiguous_fmt_datakey\u001b[39m=\u001b[39;49mambiguous_fmt_datakey)\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/axes/_base.py:534\u001b[0m, in \u001b[0;36m_process_plot_var_args._plot_args\u001b[0;34m(self, axes, tup, kwargs, return_kwargs, ambiguous_fmt_datakey)\u001b[0m\n\u001b[1;32m    532\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mlist\u001b[39m(result)\n\u001b[1;32m    533\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[0;32m--> 534\u001b[0m     \u001b[39mreturn\u001b[39;00m [l[\u001b[39m0\u001b[39m] \u001b[39mfor\u001b[39;00m l \u001b[39min\u001b[39;00m result]\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/axes/_base.py:534\u001b[0m, in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    532\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mlist\u001b[39m(result)\n\u001b[1;32m    533\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[0;32m--> 534\u001b[0m     \u001b[39mreturn\u001b[39;00m [l[\u001b[39m0\u001b[39m] \u001b[39mfor\u001b[39;00m l \u001b[39min\u001b[39;00m result]\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/axes/_base.py:527\u001b[0m, in \u001b[0;36m<genexpr>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    522\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    523\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\n\u001b[1;32m    524\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mlabel must be scalar or have the same length as the input \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    525\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mdata, but found \u001b[39m\u001b[39m{\u001b[39;00m\u001b[39mlen\u001b[39m(label)\u001b[39m}\u001b[39;00m\u001b[39m for \u001b[39m\u001b[39m{\u001b[39;00mn_datasets\u001b[39m}\u001b[39;00m\u001b[39m datasets.\u001b[39m\u001b[39m\"\u001b[39m)\n\u001b[0;32m--> 527\u001b[0m result \u001b[39m=\u001b[39m (make_artist(axes, x[:, j \u001b[39m%\u001b[39;49m ncx], y[:, j \u001b[39m%\u001b[39;49m ncy], kw,\n\u001b[1;32m    528\u001b[0m                       {\u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs, \u001b[39m'\u001b[39;49m\u001b[39mlabel\u001b[39;49m\u001b[39m'\u001b[39;49m: label})\n\u001b[1;32m    529\u001b[0m           \u001b[39mfor\u001b[39;00m j, label \u001b[39min\u001b[39;00m \u001b[39menumerate\u001b[39m(labels))\n\u001b[1;32m    531\u001b[0m \u001b[39mif\u001b[39;00m return_kwargs:\n\u001b[1;32m    532\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mlist\u001b[39m(result)\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/axes/_base.py:335\u001b[0m, in \u001b[0;36m_process_plot_var_args._makeline\u001b[0;34m(self, axes, x, y, kw, kwargs)\u001b[0m\n\u001b[1;32m    333\u001b[0m kw \u001b[39m=\u001b[39m {\u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkw, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs}  \u001b[39m# Don't modify the original kw.\u001b[39;00m\n\u001b[1;32m    334\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_setdefaults(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_getdefaults(kw), kw)\n\u001b[0;32m--> 335\u001b[0m seg \u001b[39m=\u001b[39m mlines\u001b[39m.\u001b[39;49mLine2D(x, y, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkw)\n\u001b[1;32m    336\u001b[0m \u001b[39mreturn\u001b[39;00m seg, kw\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/lines.py:407\u001b[0m, in \u001b[0;36mLine2D.__init__\u001b[0;34m(self, xdata, ydata, linewidth, linestyle, color, gapcolor, marker, markersize, markeredgewidth, markeredgecolor, markerfacecolor, markerfacecoloralt, fillstyle, antialiased, dash_capstyle, solid_capstyle, dash_joinstyle, solid_joinstyle, pickradius, drawstyle, markevery, **kwargs)\u001b[0m\n\u001b[1;32m    403\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mset_markeredgewidth(markeredgewidth)\n\u001b[1;32m    405\u001b[0m \u001b[39m# update kwargs before updating data to give the caller a\u001b[39;00m\n\u001b[1;32m    406\u001b[0m \u001b[39m# chance to init axes (and hence unit support)\u001b[39;00m\n\u001b[0;32m--> 407\u001b[0m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_internal_update(kwargs)\n\u001b[1;32m    408\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mpickradius \u001b[39m=\u001b[39m pickradius\n\u001b[1;32m    409\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mind_offset \u001b[39m=\u001b[39m \u001b[39m0\u001b[39m\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/artist.py:1216\u001b[0m, in \u001b[0;36mArtist._internal_update\u001b[0;34m(self, kwargs)\u001b[0m\n\u001b[1;32m   1209\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m_internal_update\u001b[39m(\u001b[39mself\u001b[39m, kwargs):\n\u001b[1;32m   1210\u001b[0m \u001b[39m    \u001b[39m\u001b[39m\"\"\"\u001b[39;00m\n\u001b[1;32m   1211\u001b[0m \u001b[39m    Update artist properties without prenormalizing them, but generating\u001b[39;00m\n\u001b[1;32m   1212\u001b[0m \u001b[39m    errors as if calling `set`.\u001b[39;00m\n\u001b[1;32m   1213\u001b[0m \n\u001b[1;32m   1214\u001b[0m \u001b[39m    The lack of prenormalization is to maintain backcompatibility.\u001b[39;00m\n\u001b[1;32m   1215\u001b[0m \u001b[39m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 1216\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_update_props(\n\u001b[1;32m   1217\u001b[0m         kwargs, \u001b[39m\"\u001b[39;49m\u001b[39m{cls.__name__}\u001b[39;49;00m\u001b[39m.set() got an unexpected keyword argument \u001b[39;49m\u001b[39m\"\u001b[39;49m\n\u001b[1;32m   1218\u001b[0m         \u001b[39m\"\u001b[39;49m\u001b[39m{prop_name!r}\u001b[39;49;00m\u001b[39m\"\u001b[39;49m)\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/artist.py:1192\u001b[0m, in \u001b[0;36mArtist._update_props\u001b[0;34m(self, props, errfmt)\u001b[0m\n\u001b[1;32m   1189\u001b[0m             \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mcallable\u001b[39m(func):\n\u001b[1;32m   1190\u001b[0m                 \u001b[39mraise\u001b[39;00m \u001b[39mAttributeError\u001b[39;00m(\n\u001b[1;32m   1191\u001b[0m                     errfmt\u001b[39m.\u001b[39mformat(\u001b[39mcls\u001b[39m\u001b[39m=\u001b[39m\u001b[39mtype\u001b[39m(\u001b[39mself\u001b[39m), prop_name\u001b[39m=\u001b[39mk))\n\u001b[0;32m-> 1192\u001b[0m             ret\u001b[39m.\u001b[39mappend(func(v))\n\u001b[1;32m   1193\u001b[0m \u001b[39mif\u001b[39;00m ret:\n\u001b[1;32m   1194\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mpchanged()\n",
      "File \u001b[0;32m~/feature-circuit-discovery/.venv/lib/python3.10/site-packages/matplotlib/artist.py:1008\u001b[0m, in \u001b[0;36mArtist.set_alpha\u001b[0;34m(self, alpha)\u001b[0m\n\u001b[1;32m    999\u001b[0m \u001b[39m\u001b[39m\u001b[39m\"\"\"\u001b[39;00m\n\u001b[1;32m   1000\u001b[0m \u001b[39mSet the alpha value used for blending - not supported on all backends.\u001b[39;00m\n\u001b[1;32m   1001\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1005\u001b[0m \u001b[39m    *alpha* must be within the 0-1 range, inclusive.\u001b[39;00m\n\u001b[1;32m   1006\u001b[0m \u001b[39m\"\"\"\u001b[39;00m\n\u001b[1;32m   1007\u001b[0m \u001b[39mif\u001b[39;00m alpha \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m \u001b[39mand\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39misinstance\u001b[39m(alpha, Real):\n\u001b[0;32m-> 1008\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mTypeError\u001b[39;00m(\n\u001b[1;32m   1009\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m'\u001b[39m\u001b[39malpha must be numeric or None, not \u001b[39m\u001b[39m{\u001b[39;00m\u001b[39mtype\u001b[39m(alpha)\u001b[39m}\u001b[39;00m\u001b[39m'\u001b[39m)\n\u001b[1;32m   1010\u001b[0m \u001b[39mif\u001b[39;00m alpha \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m \u001b[39mand\u001b[39;00m \u001b[39mnot\u001b[39;00m (\u001b[39m0\u001b[39m \u001b[39m<\u001b[39m\u001b[39m=\u001b[39m alpha \u001b[39m<\u001b[39m\u001b[39m=\u001b[39m \u001b[39m1\u001b[39m):\n\u001b[1;32m   1011\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\u001b[39mf\u001b[39m\u001b[39m'\u001b[39m\u001b[39malpha (\u001b[39m\u001b[39m{\u001b[39;00malpha\u001b[39m}\u001b[39;00m\u001b[39m) is outside 0-1 range\u001b[39m\u001b[39m'\u001b[39m)\n",
      "\u001b[0;31mTypeError\u001b[0m: alpha must be numeric or None, not <class 'torch.Tensor'>"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "connections = {}\n",
    "num_layers = len(activated_features)\n",
    "\n",
    "for i in range(num_layers):\n",
    "    for j in range(i + 1, num_layers):\n",
    "        # Compute the gradient matrix between layer i and layer j\n",
    "        grad_matrix = compute_gradient_matrix(\n",
    "            tokenized_prompts,\n",
    "            i,\n",
    "            j,\n",
    "            activated_features[i],\n",
    "            activated_features[j],\n",
    "            model,\n",
    "            verbose=True,\n",
    "        )\n",
    "        # Store the computed matrix in the dictionary\n",
    "        connections[(i, j)] = grad_matrix\n",
    "\n",
    "plot_layered_network(connections)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "af03a6b7-0ec6-424f-8775-caba39d6965a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 1)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 58.02it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 2)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 37.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 3)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 28.95it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 4)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 23/23 [00:00<00:00, 23.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 20.80it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 18.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 15.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 14.30it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 13.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 11.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 11.07it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00, 10.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:01<00:00,  9.64it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00,  9.08it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  8.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.70it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  7.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.66it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  6.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:01<00:00,  6.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.86it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:01<00:00,  5.64it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 0)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.42it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 2)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 28.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 3)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 23.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 4)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 23/23 [00:01<00:00, 19.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 17.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 15.43it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.64it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.65it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 10.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.47it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.41it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.54it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.21it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.89it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.58it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.28it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  6.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.79it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.58it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 1)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.17it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 3)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 23.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 4)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 23/23 [00:01<00:00, 19.42it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 17.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 15.56it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.70it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.79it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 10.07it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.48it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.51it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.16it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.84it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.27it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.56it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 2)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.16it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 4)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 23/23 [00:01<00:00, 19.22it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 17.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 15.27it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 10.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.80it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.86it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.12it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.80it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.23it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.97it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.75it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 3)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 5)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:00<00:00, 14.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 13.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 12.27it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 10.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:02<00:00,  9.75it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  8.64it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  7.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:03<00:00,  7.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  6.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.40it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.17it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.65it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.47it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.09it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 4)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 6)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:00<00:00, 14.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.54it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.23it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.67it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.20it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.75it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.03it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.44it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.16it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.70it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.47it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 5)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 7)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 16/16 [00:01<00:00, 13.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.58it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.70it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00, 10.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.79it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.86it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.12it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.80it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.22it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.97it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.53it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 6)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.13it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 8)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 12.05it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.68it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.66it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  7.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.67it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.42it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.12it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.87it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.66it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 7)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.05it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 9)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:01<00:00, 11.07it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.03it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.62it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.95it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.65it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.65it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.44it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.23it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 8)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.05it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 10)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 20/20 [00:01<00:00, 10.30it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.63it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.07it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.62it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.86it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.65it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.44it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 9)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.05it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 11)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 18/18 [00:01<00:00,  9.42it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  8.87it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  7.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.48it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.75it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.18it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 10)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.98it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 12)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:01<00:00,  9.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.58it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.21it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.93it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.07it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.62it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.42it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 11)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.02it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 13)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  8.62it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  8.17it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.71it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:01<00:00,  7.02it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.47it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.16it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.67it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 12)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 14)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 17/17 [00:02<00:00,  7.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.54it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.56it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.17it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 13)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.98it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 15)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 22/22 [00:02<00:00,  7.58it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.22it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.40it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 14)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 16)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 19/19 [00:02<00:00,  7.04it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.43it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.20it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 15)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  4.93it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 17)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 14/14 [00:02<00:00,  6.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.54it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.75it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.54it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 23)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 12/12 [00:02<00:00,  5.35it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 24)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 11/11 [00:02<00:00,  5.21it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 16)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 25)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  5.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 18)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:01<00:00,  6.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 19)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [00:01<00:00,  6.47it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 20)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 13/13 [00:02<00:00,  6.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 21)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 15/15 [00:02<00:00,  5.90it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "clean up\n",
      "done\n",
      "\n",
      "loading upstream sae (Layer 17)\n",
      "upsteam sae loaded\n",
      "loading downstram sae (Layer 22)\n",
      "downsteam sae loaded\n",
      "getting upstram feature vectors\n",
      "conducting forward pass\n",
      "computing gradients\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 17%|█▋        | 2/12 [00:00<00:01,  5.92it/s]"
     ]
    }
   ],
   "source": [
    "connections = {}\n",
    "num_layers = len(activated_features)\n",
    "\n",
    "for i in range(num_layers):\n",
    "    for j in range(i + 1, num_layers):\n",
    "        # Compute the gradient matrix between layer i and layer j\n",
    "        grad_matrix = compute_gradient_matrix(\n",
    "            tokenized_prompts,\n",
    "            i,\n",
    "            j,\n",
    "            activated_features[i],\n",
    "            activated_features[j],\n",
    "            model,\n",
    "            verbose=True,\n",
    "        )\n",
    "        # Store the computed matrix in the dictionary\n",
    "        connections[(i, j)] = grad_matrix\n",
    "\n",
    "plot_layered_network(connections)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
